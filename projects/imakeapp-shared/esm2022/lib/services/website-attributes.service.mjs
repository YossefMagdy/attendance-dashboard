import { Injectable } from "@angular/core";
import { BehaviorSubject } from "rxjs";
import { environment } from "../environments/environment.prod";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
export class WebsiteAttributesService {
    http;
    _site_attributes = new BehaviorSubject({});
    constructor(http) {
        this.http = http;
    }
    get_site_theme() {
        return new Promise((resolve, reject) => {
            this.http.get(`${environment.ApiEndPoint2}/Attributes/Mapindex`).subscribe((data) => {
                this.format_attributes(data, resolve);
            }, (err) => {
                console.error(err);
            });
        });
    }
    format_attributes(attributes, resolve) {
        // calculate new primary color format
        // append new primary color to attributes object
        let new_primary_color = this.format_primary_color(attributes);
        attributes.new_primary_color = new_primary_color;
        // set website attributes to app style
        this.set_theme_data(attributes);
        // set app headers data
        this.changeFavicon(attributes['logo']);
        this._site_attributes.next(attributes);
        this.save_site_attributes_to_storage(attributes);
        resolve(attributes);
    }
    save_site_attributes_to_storage(new_site_attributes) {
        localStorage.setItem('site_attributes', JSON.stringify(new_site_attributes));
    }
    get_site_attributes() {
        console.log(this._site_attributes);
        return this._site_attributes;
    }
    get_site_attributes_storage() {
        let temp = localStorage.getItem('site_attributes');
        let site_attributes = temp ? JSON.parse(temp) : [];
        return site_attributes;
    }
    format_primary_color(new_site_attributes) {
        let primary_color = new_site_attributes['primary_color'];
        let primary_color_without_hash = primary_color.split('#')[1];
        let primart_color_red_hexa = primary_color_without_hash.slice(0, 2);
        let primart_color_green_hexa = primary_color_without_hash.slice(2, 4);
        let primart_color_blue_hexa = primary_color_without_hash.slice(4, 6);
        let primart_color_red_decimal = parseInt(primart_color_red_hexa, 16);
        let primart_color_green_decimal = parseInt(primart_color_green_hexa, 16);
        let primart_color_blue_decimal = parseInt(primart_color_blue_hexa, 16);
        let opacity = 0.05;
        let primary_color_rgba = `rgba(${primart_color_red_decimal},${primart_color_green_decimal},${primart_color_blue_decimal},${opacity})`;
        return primary_color_rgba;
    }
    set_theme_data(website_attributes) {
        // catch css variables
        let css_root = document.querySelector(":root");
        css_root.style.setProperty('--primary-color', website_attributes['primary_color']);
        css_root.style.setProperty('--primary-color-rgba', website_attributes['new_primary_color']);
        css_root.style.setProperty('--secondary-color', website_attributes['secondary_color']);
        css_root.style.setProperty('--font-color', website_attributes['text_color']);
        css_root.style.setProperty('--logo', `url("${website_attributes['logo']}")`);
        css_root.style.setProperty('--logo_splash', `url("${website_attributes['logo_splash']}")`);
        css_root.style.setProperty('--currency', website_attributes['currency']);
        this.add_font_family(website_attributes['font_family_1'], css_root);
    }
    add_font_family(site_attr_value, root_reference) {
        let temp = site_attr_value.split("###");
        let font_family_el_content = temp[0];
        let font_family_name = temp[1];
        let custom_el = document.createElement("div");
        custom_el.innerHTML = font_family_el_content;
        document.body.appendChild(custom_el);
        root_reference.style.setProperty('--font-family-1', font_family_name);
    }
    changeFavicon(faviconFileName) {
        let favIcon = document.querySelector('#appIcon');
        let favIconApple = document.querySelector('#appIconApple');
        favIcon.href = faviconFileName;
        favIconApple.href = faviconFileName;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: WebsiteAttributesService, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: WebsiteAttributesService, providedIn: 'root' });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: WebsiteAttributesService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.HttpClient }]; } });
//# sourceMappingURL=data:application/json;base64,